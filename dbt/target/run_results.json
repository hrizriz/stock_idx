{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-05-11T23:59:20.743614Z", "invocation_id": "aa4af215-b22b-4646-8cba-a367603e7aac", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-11T23:59:19.427811Z", "completed_at": "2025-05-11T23:59:19.451487Z"}, {"name": "execute", "started_at": "2025-05-11T23:59:19.453139Z", "completed_at": "2025-05-11T23:59:19.643917Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.22247099876403809, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.idx_stock.stg_stock_predictions", "compiled": true, "compiled_code": "-- models/staging/stg_stock_predictions.sql\nwith raw as (\n  select \n    symbol,\n    prediction_date,\n    predicted_close,\n    actual_close,\n    prediction_error,\n    error_percentage,\n    created_at\n  from \"airflow\".\"public\".\"stock_predictions\"\n)\n\nselect * from raw", "relation_name": "\"airflow\".\"public_staging\".\"stg_stock_predictions\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-11T23:59:19.662469Z", "completed_at": "2025-05-11T23:59:19.680480Z"}, {"name": "execute", "started_at": "2025-05-11T23:59:19.682150Z", "completed_at": "2025-05-11T23:59:20.235544Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.578162670135498, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.idx_stock.fct_stock_predictions", "compiled": true, "compiled_code": "\n\nWITH predictions AS (\n    SELECT \n        symbol,\n        prediction_date,\n        predicted_close,\n        actual_close,\n        prediction_error,\n        error_percentage,\n        created_at\n    FROM \"airflow\".\"public_staging\".\"stg_stock_predictions\"\n),\n\nstock_data AS (\n    SELECT \n        symbol,\n        date,\n        close,\n        volume,\n        percent_change\n    FROM \"airflow\".\"public_core\".\"fct_daily_stock_metrics\"\n),\n\nlstm_processed AS (\n    SELECT\n        p.symbol,\n        p.prediction_date,\n        p.predicted_close,\n        p.actual_close,\n        p.prediction_error,\n        p.error_percentage,\n        p.created_at,\n        s.close as previous_close,\n        s.volume,\n        s.percent_change,\n        CASE\n            WHEN p.predicted_close > s.close THEN 'Bullish'\n            WHEN p.predicted_close < s.close THEN 'Bearish'\n            ELSE 'Neutral'\n        END as prediction_direction,\n        CASE\n            WHEN p.actual_close IS NOT NULL AND \n                 ((p.predicted_close > s.close AND p.actual_close > s.close) OR\n                  (p.predicted_close < s.close AND p.actual_close < s.close))\n            THEN true\n            WHEN p.actual_close IS NOT NULL\n            THEN false\n            ELSE NULL\n        END as direction_correct\n    FROM predictions p\n    LEFT JOIN stock_data s \n        ON p.symbol = s.symbol \n        AND s.date = p.prediction_date - INTERVAL '1 day'\n)\n\nSELECT * FROM lstm_processed", "relation_name": "\"airflow\".\"public_core\".\"fct_stock_predictions\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-11T23:59:20.257102Z", "completed_at": "2025-05-11T23:59:20.277443Z"}, {"name": "execute", "started_at": "2025-05-11T23:59:20.279248Z", "completed_at": "2025-05-11T23:59:20.383189Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.13497376441955566, "adapter_response": {"_message": "SELECT 0", "code": "SELECT", "rows_affected": 0}, "message": "SELECT 0", "failures": null, "unique_id": "model.idx_stock.lstm_performance_metrics", "compiled": true, "compiled_code": "\n\nWITH lstm_predictions AS (\n    SELECT * FROM \"airflow\".\"public_core\".\"fct_stock_predictions\"\n),\n\n-- Akurasi LSTM per ticker\nlstm_accuracy AS (\n    SELECT\n        symbol,\n        COUNT(*) as total_predictions,\n        SUM(CASE WHEN actual_close IS NOT NULL THEN 1 ELSE 0 END) as predictions_with_actuals,\n        SUM(CASE WHEN direction_correct = true THEN 1 ELSE 0 END) as correct_direction_predictions,\n        AVG(error_percentage) as avg_error_percentage,\n        CASE\n            WHEN SUM(CASE WHEN actual_close IS NOT NULL THEN 1 ELSE 0 END) > 0\n            THEN \n                SUM(CASE WHEN direction_correct = true THEN 1 ELSE 0 END)::float / \n                NULLIF(SUM(CASE WHEN actual_close IS NOT NULL THEN 1 ELSE 0 END), 0) * 100\n            ELSE 0\n        END as direction_accuracy_pct\n    FROM lstm_predictions\n    WHERE actual_close IS NOT NULL\n    GROUP BY symbol\n),\n\n-- Latest predictions per symbol\nlatest_predictions AS (\n    SELECT DISTINCT ON (symbol)\n        symbol,\n        prediction_date,\n        predicted_close,\n        actual_close,\n        error_percentage,\n        prediction_direction,\n        created_at\n    FROM lstm_predictions\n    ORDER BY symbol, prediction_date DESC\n)\n\n-- Main output\nSELECT\n    a.symbol,\n    a.total_predictions,\n    a.predictions_with_actuals,\n    a.correct_direction_predictions,\n    a.avg_error_percentage,\n    a.direction_accuracy_pct,\n    lp.prediction_date as latest_prediction_date,\n    lp.predicted_close as latest_predicted_close,\n    lp.prediction_direction as latest_prediction_direction\nFROM lstm_accuracy a\nLEFT JOIN latest_predictions lp ON a.symbol = lp.symbol", "relation_name": "\"airflow\".\"public_analytics\".\"lstm_performance_metrics\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-05-11T23:59:20.263143Z", "completed_at": "2025-05-11T23:59:20.284563Z"}, {"name": "execute", "started_at": "2025-05-11T23:59:20.287353Z", "completed_at": "2025-05-11T23:59:20.695947Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.44654083251953125, "adapter_response": {"_message": "SELECT 53599", "code": "SELECT", "rows_affected": 53599}, "message": "SELECT 53599", "failures": null, "unique_id": "model.idx_stock.stock_prediction_dashboard", "compiled": true, "compiled_code": "\n\nWITH stock_data AS (\n    SELECT *\n    FROM \"airflow\".\"public_core\".\"fct_daily_stock_metrics\"\n),\n\ntechnical_indicators AS (\n    SELECT \n        r.symbol,\n        r.date,\n        r.rsi,\n        r.rsi_signal,\n        m.macd_line,\n        m.signal_line,\n        m.macd_signal,\n        m.histogram\n    FROM \"airflow\".\"public_analytics\".\"technical_indicators_rsi\" r\n    JOIN \"airflow\".\"public_analytics\".\"technical_indicators_macd\" m \n        ON r.symbol = m.symbol AND r.date = m.date\n),\n\nnews_sentiment AS (\n    SELECT *\n    FROM \"airflow\".\"public_analytics\".\"news_sentiment_analysis\"\n),\n\nlstm_data AS (\n    SELECT *\n    FROM \"airflow\".\"public_core\".\"fct_stock_predictions\"\n),\n\ncombined_data AS (\n    SELECT\n        sd.symbol,\n        sd.date,\n        sd.close,\n        sd.volume,\n        sd.percent_change,\n        \n        -- Technical indicators\n        ti.rsi,\n        ti.rsi_signal,\n        ti.macd_line,\n        ti.macd_signal,\n        ti.histogram,\n\n        -- Sentiment\n        ns.avg_sentiment,\n        ns.positive_percentage,\n        ns.negative_percentage,\n        ns.trading_signal AS news_trading_signal,\n\n        -- LSTM\n        ld.predicted_close,\n        ld.prediction_direction AS lstm_direction,\n        ld.actual_close,\n        ld.prediction_error,\n        ld.error_percentage,\n\n        -- Derived\n        ld.predicted_close - sd.close AS prediction_gap,\n        CASE \n            WHEN sd.close IS NOT NULL AND ld.predicted_close IS NOT NULL\n            THEN ROUND((ld.predicted_close - sd.close) / sd.close * 100, 2)\n            ELSE NULL\n        END AS prediction_gap_pct,\n\n        -- Aggregated final signal (example logic)\n        CASE\n            WHEN ti.macd_signal = 'Bullish' AND ti.rsi_signal = 'Overbought' AND ns.trading_signal = 'Buy' THEN 'Bullish Strong'\n            WHEN ti.macd_signal = 'Bearish' AND ti.rsi_signal = 'Oversold' AND ns.trading_signal = 'Sell' THEN 'Bearish Strong'\n            WHEN ti.macd_signal = 'Bullish' OR ti.rsi_signal = 'Overbought' OR ns.trading_signal = 'Buy' THEN 'Bullish'\n            WHEN ti.macd_signal = 'Bearish' OR ti.rsi_signal = 'Oversold' OR ns.trading_signal = 'Sell' THEN 'Bearish'\n            ELSE 'Neutral'\n        END AS final_signal\n\n    FROM stock_data sd\n    LEFT JOIN technical_indicators ti ON sd.symbol = ti.symbol AND sd.date = ti.date\n    LEFT JOIN news_sentiment ns ON sd.symbol = ns.symbol AND sd.date = ns.date\n    LEFT JOIN lstm_data ld ON sd.symbol = ld.symbol AND sd.date = ld.prediction_date\n    WHERE sd.date >= CURRENT_DATE - INTERVAL '90 day'\n)\n\nSELECT * FROM combined_data", "relation_name": "\"airflow\".\"public_analytics\".\"stock_prediction_dashboard\"", "batch_results": null}], "elapsed_time": 1.5946698188781738, "args": {"cache_selected_only": false, "require_explicit_package_overrides_for_builtin_materializations": true, "print": true, "quiet": false, "select": ["stg_stock_predictions", "fct_stock_predictions", "lstm_performance_metrics", "stock_prediction_dashboard"], "require_resource_names_without_spaces": false, "use_colors": true, "write_json": true, "defer": false, "project_dir": "/opt/airflow/dbt", "state_modified_compare_vars": false, "log_path": "/opt/airflow/dbt/logs", "partial_parse": true, "warn_error_options": {"include": [], "exclude": []}, "require_yaml_configuration_for_mf_time_spines": false, "require_batched_execution_for_custom_microbatch_strategy": false, "log_format": "default", "invocation_command": "dbt run --profiles-dir /opt/airflow/dbt --select stg_stock_predictions fct_stock_predictions lstm_performance_metrics stock_prediction_dashboard", "profiles_dir": "/opt/airflow/dbt", "source_freshness_run_project_hooks": false, "introspect": true, "partial_parse_file_diff": true, "populate_cache": true, "which": "run", "state_modified_compare_more_unrendered_values": false, "exclude": [], "empty": false, "version_check": true, "log_level_file": "debug", "skip_nodes_if_on_run_start_fails": false, "log_format_file": "debug", "vars": {}, "send_anonymous_usage_stats": true, "log_level": "info", "require_nested_cumulative_type_params": false, "strict_mode": false, "show_resource_report": false, "use_colors_file": true, "static_parser": true, "indirect_selection": "eager", "favor_state": false, "printer_width": 80, "macro_debugging": false, "log_file_max_bytes": 10485760}}
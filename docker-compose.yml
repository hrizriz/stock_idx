version: "3.8"

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__SESSION_EXPIRATION_MINUTES=43200
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__COOKIE_SAMESITE=Lax
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY:-46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=}
      - AIRFLOW_CONN_TELEGRAM_CONN=${AIRFLOW_CONN_TELEGRAM_CONN:-http://https%3A%2F%2Fapi.telegram.org?base_url=https%3A%2F%2Fapi.telegram.org%2Fbot${TELEGRAM_BOT_TOKEN}%2F}
      - AIRFLOW_VAR_TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-default_chat_id}
      - AIRFLOW_VAR_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-default_bot_token}
    entrypoint: >
      bash -c "
      echo '⏳ Waiting for PostgreSQL...';
      until pg_isready -h postgres -p 5432 -U airflow; do
        sleep 2;
      done;
      echo '✅ PostgreSQL is ready!';
      airflow db upgrade &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
      airflow variables set TELEGRAM_BOT_TOKEN pleasant-placeholder-token &&
      airflow variables set TELEGRAM_CHAT_ID your-chat-id-here
      "
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/opt/airflow/data
      - ./dbt:/opt/airflow/dbt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./scrapers:/opt/airflow/scrapers
    networks:
      - airflow_network

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__SESSION_EXPIRATION_MINUTES=43200
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__COOKIE_SAMESITE=Lax
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY:-46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=}
      - AIRFLOW_CONN_TELEGRAM_CONN=${AIRFLOW_CONN_TELEGRAM_CONN:-http://https%3A%2F%2Fapi.telegram.org?base_url=https%3A%2F%2Fapi.telegram.org%2Fbot${TELEGRAM_BOT_TOKEN}%2F}
      - AIRFLOW_VAR_TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-default_chat_id}
      - AIRFLOW_VAR_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-default_bot_token}
    command: webserver
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/opt/airflow/data
      - ./dbt:/opt/airflow/dbt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__WEBSERVER__SECRET_KEY=46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__SESSION_EXPIRATION_MINUTES=43200
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__COOKIE_SAMESITE=Lax
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY:-46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY:-46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho=}
      - AIRFLOW_CONN_TELEGRAM_CONN=${AIRFLOW_CONN_TELEGRAM_CONN:-http://https%3A%2F%2Fapi.telegram.org?base_url=https%3A%2F%2Fapi.telegram.org%2Fbot${TELEGRAM_BOT_TOKEN}%2F}
      - AIRFLOW_VAR_TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-default_chat_id}
      - AIRFLOW_VAR_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-default_bot_token}
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/opt/airflow/data
      - ./dbt:/opt/airflow/dbt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./scrapers:/opt/airflow/scrapers
    networks:
      - airflow_network

volumes:
  postgres_data:

networks:
  airflow_network:
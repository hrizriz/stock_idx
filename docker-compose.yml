# OPTION 1: Update docker-compose.yml (RECOMMENDED)
# Add portofolio_tracker volume mount to streamlit service

version: "3.8"

services:
  postgres:
    image: postgres:14
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-airflow}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-airflow}
      - POSTGRES_DB=${POSTGRES_DB:-airflow}
      - PGDATA=/var/lib/postgresql/data/pgdata
      - MAX_CONNECTIONS=100
      - SHARED_BUFFERS=256MB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-airflow}"]
      interval: 10s
      timeout: 5s
      retries: 5

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__SESSION_EXPIRATION_MINUTES=43200
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__COOKIE_SAMESITE=Lax
      - AIRFLOW_CONN_TELEGRAM_CONN=${AIRFLOW_CONN_TELEGRAM_CONN}
      - AIRFLOW_VAR_TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
      - AIRFLOW_VAR_TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    entrypoint: >
      bash -c "
      echo '⏳ Waiting for PostgreSQL...';
      until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER:-airflow}; do
        sleep 2;
      done;
      echo '✅ PostgreSQL is ready!';
      airflow db upgrade &&
      airflow users create --username ${AIRFLOW_ADMIN_USER:-admin} --firstname Admin --lastname User --role Admin --email admin@example.com --password ${AIRFLOW_ADMIN_PASSWORD:-admin} &&
      airflow variables set TELEGRAM_BOT_TOKEN ${TELEGRAM_BOT_TOKEN} &&
      airflow variables set TELEGRAM_CHAT_ID ${TELEGRAM_CHAT_ID}
      "
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/opt/airflow/data
      - ./dbt:/opt/airflow/dbt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - airflow_network

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__SESSION_EXPIRATION_MINUTES=43200
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__COOKIE_SAMESITE=Lax
    command: webserver
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/opt/airflow/data
      - ./dbt:/opt/airflow/dbt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      - airflow-webserver
    env_file:
      - ./.env
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER:-airflow}:${POSTGRES_PASSWORD:-airflow}@postgres:5432/${POSTGRES_DB:-airflow}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__WEBSERVER__SECRET_KEY=${AIRFLOW__WEBSERVER__SECRET_KEY}
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Jakarta
      - AIRFLOW__WEBSERVER__SESSION_EXPIRATION_MINUTES=43200
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__WEBSERVER__COOKIE_SECURE=False
      - AIRFLOW__WEBSERVER__COOKIE_SAMESITE=Lax
    command: scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/opt/airflow/data
      - ./dbt:/opt/airflow/dbt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - airflow_network
  
  streamlit-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8501:8501"
    env_file:
      - ./.env
    environment:
      - DB_HOST=postgres
      - DB_NAME=${POSTGRES_DB:-airflow}
      - DB_USER=${POSTGRES_USER:-airflow}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-airflow}
      - DB_PORT=5432
    volumes:
      - ./dashboard:/app
      - ./portofolio_tracker:/app/portofolio_tracker
      - ./setup_portofolio_db.py:/app/setup_portofolio_db.py
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command: >
      bash -c "
      echo '⏳ Menunggu database PostgreSQL untuk Portfolio Tracker...';
      until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER:-airflow}; do
        sleep 2;
      done;
      echo '✅ PostgreSQL siap! Menjalankan setup database Portfolio Tracker...';
      python /app/setup_portofolio_db.py && \
      echo '✅ Setup database Portfolio Tracker selesai. Memulai Streamlit...';
      streamlit run app.py --server.port=8501 --server.address=0.0.0.0
      "
    networks:
      - airflow_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 20s
      retries: 5

volumes:
  postgres_data:

networks:
  airflow_network: